config_opts['chroot_setup_cmd'] = 'install tar gcc-c++ redhat-rpm-config redhat-release which xz sed make bzip2 gzip gcc coreutils unzip shadow-utils diffutils cpio bash gawk rpm-build info patch util-linux findutils grep git-core'
config_opts['dist'] = 'el8'  # only useful for --resultdir variable subst
config_opts['releasever'] = '8'
config_opts['package_manager'] = 'dnf'
config_opts['extra_chroot_dirs'] = [ '/run/lock', ]
config_opts['bootstrap_image'] = 'centos:8'
config_opts['root'] = 'rocky-8-x86_64'
config_opts['target_arch'] = 'x86_64'
config_opts['legal_host_arches'] = ('x86_64',)

# Match "groupinstall build" present on Koji:
#config_opts['chroot_setup_cmd'] = ('groupinstall build')

#config_opts['chroot_setup_cmd'] += ('  buildsys-macros-el8  centpkg-minimal  scl-utils-build  ')

# temp. for gegl build:
#config_opts['chroot_setup_cmd'] += ('  libgexiv2-devel ')

# Work around maven pkgs that expect a conf file:
#config_opts['files']['/etc/java/maven.conf'] = " " 

# work around for various packages needing python3 defined:
config_opts['macros']['__python'] = '%{__python3}'



config_opts['dnf.conf'] = """
[main]
keepcache=1
debuglevel=2
reposdir=/dev/null
logfile=/var/log/yum.log
retries=20
obsoletes=1
gpgcheck=0
assumeyes=1
syslog_ident=mock
syslog_device=
metadata_expire=0
mdpolicy=group:primary
#best=0
protected_packages=
module_platform_id=platform:el8
user_agent={{ user_agent }}
install_weak_deps=0


# Skip Grube's Rocky Koji Mirror:
# (refreshed every 4-6 hours, contains Rocky Linux 8's main Koji Pool/repo)
# This should make your local Mock build match the dependencies that kojidev.rockylinux.org "sees" for its non-modular builds
[RockyKoji]
name=Rocky Koji Mirror -  dist-rocky8-build Tag
baseurl=https://rocky.lowend.ninja/RockyKoji/
enabled=1
gpgcheck=0
module_hotfixes=1
"""
